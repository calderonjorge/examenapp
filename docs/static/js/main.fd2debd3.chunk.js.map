{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/uiActions.js","actions/authActions.js","hooks/useForm.js","components/auth/LoginScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","components/employees/EmployeesScreen.js","actions/employeesActions.js","components/employees/NewEmployee.js","components/UI/Navbar.js","components/upload/UploadScreen.js","routers/HomeRouter.js","routers/AppRouter.js","reducers/employeesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","ExamenApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","types","setError","err","type","payload","removeError","finishLoading","startLoginEmailPassword","email","password","dispatch","auth","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","Swal","fire","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","msgError","formValues","blockAction","e","preventDefault","blockCopy","nativeEvent","stopImmediatePropagation","isFormValid","trim","length","validator","isEmail","className","onSubmit","placeholder","autoComplete","onChange","onCopy","onPaste","disabled","AuthRouter","exact","path","component","to","PrivateRoute","isLoggedIn","Component","rest","props","PublicRoute","EmployeesScreen","employees","columns","selector","sortable","data","title","pagination","fixedHeaderScrollHeight","setEmployees","NewEmployee","last_name","birthday","role","employee","a","myJSON","JSON","stringify","fetch","headers","method","body","console","log","addEmployeeToState","htmlFor","Navbar","activeClassName","onClick","signOut","UploadScreen","HomeRouter","AppRouter","checking","setChecking","setIsLoggedIn","useEffect","onAuthStateChanged","resp","json","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","actions","store","createStore","applyMiddleware","thunk","ExamenApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fd2debd3.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCDt2osehi8eG37pIxfAQixPo-FHz2oNP4\",\r\n  authDomain: \"users-84536.firebaseapp.com\",\r\n  projectId: \"users-84536\",\r\n  storageBucket: \"users-84536.appspot.com\",\r\n  messagingSenderId: \"809486910756\",\r\n  appId: \"1:809486910756:web:d587af27f30fea09c85fb1\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\n\r\n\r\nexport {\r\n  db,\r\n  firebase\r\n}\r\n\r\n","export const types = {\r\n  login: '[auth] login',\r\n  logout: '[auth] logout',\r\n\r\n  uiSetError: '[UI] Set error',\r\n  uiRemoveError: '[UI] Remove error',\r\n\r\n  employeesLoad: '[Employees] Load employees',\r\n  addEmployeeState: '[Employees] Add employee to state',\r\n\r\n\r\n  uiStartLoading: '[UI] Start loading',\r\n  uiFinishLoading: '[UI] Finish loading',\r\n\r\n\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading\r\n})\r\n\r\n","import Swal from 'sweetalert2'\r\nimport { firebase } from '../firebase/firebase-config';\r\nimport { types } from \"../types/types\"\r\nimport { finishLoading, startLoading } from './uiActions'\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    firebase.auth().signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName))\r\n        dispatch(finishLoading());\r\n      }).catch(err => {\r\n        dispatch(finishLoading());\r\n        Swal.fire('Error', err.message, 'error');\r\n      });\r\n  }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: {\r\n    uid,\r\n    displayName\r\n  }\r\n})\r\n\r\nexport const startLogOut = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n    dispatch(logout())\r\n  }\r\n}\r\n\r\nexport const logout = () => ({\r\n  type: types.logout\r\n})\r\n\r\n\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = (newFormState = initialState) => {\r\n    setValues(newFormState);\r\n  }\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value\r\n    });\r\n\r\n  }\r\n\r\n  return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react';\nimport validator from 'validator';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLoginEmailPassword } from '../../actions/authActions';\nimport { useForm } from '../../hooks/useForm';\nimport { removeError, setError } from '../../actions/uiActions';\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n    const { ui: { loading } } = useSelector(state => state);\n    const { msgError } = useSelector(state => state.ui);\n\n    const [formValues, handleInputChange] = useForm({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = formValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        if (isFormValid()) {\n            dispatch(startLoginEmailPassword(email, password));\n        }\n    }\n\n    const blockAction = (e) => {\n        e.preventDefault()\n    };\n\n    const blockCopy = (e) => {\n        e.preventDefault();\n        e.nativeEvent.stopImmediatePropagation();\n    }\n\n    const isFormValid = () => {\n        if (email.trim().length === 0) {\n            dispatch(setError('Correo Requerido'));\n            return false;\n        }\n        if (!validator.isEmail(email)) {\n            dispatch(setError('Email no valido'));\n            return false\n        }\n        dispatch(removeError())\n        return true;\n    }\n\n\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n            {\n                msgError &&\n                (< div className=\"auth__alert-error\" > {msgError}</ div>)\n            }\n            <form onSubmit={handleLogin}>\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={handleInputChange}\n                    onCopy={blockCopy}\n                    onPaste={blockAction}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={handleInputChange}\n                    onCopy={blockCopy}\n                    onPaste={blockAction}\n                />\n                <button\n                    disabled={loading}\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                >\n                    Login\n                </button>\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { LoginScreen } from '../components/auth/LoginScreen';\n\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route exact path=\"/login\" component={LoginScreen} />\n                    <Redirect to=\"/login\" />\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PrivateRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n\r\n  return (\r\n    <Route {...rest}\r\n      component={(props) => (\r\n        (isLoggedIn) ? (<Component {...props} />) : <Redirect to='/login' />\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst PublicRoute = ({ isLoggedIn, component: Component, ...rest }) => {\r\n\r\n  return (\r\n    <Route {...rest}\r\n      component={(props) => (\r\n        (isLoggedIn) ? <Redirect to='/' /> : (<Component {...props} />)\r\n      )}\r\n    />\r\n  );\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n  isLoggedIn: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default PublicRoute\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport DataTable from 'react-data-table-component';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction EmployeesScreen() {\r\n  const { employees } = useSelector(state => state.employees);\r\n\r\n  const columnas = [\r\n    {\r\n      name: 'id',\r\n      selector: 'id',\r\n      sortable: true\r\n    },\r\n    {\r\n      name: 'name',\r\n      selector: 'name',\r\n      sortable: true\r\n    },\r\n    {\r\n      name: 'last name',\r\n      selector: 'last_name',\r\n      sortable: true\r\n    },\r\n    {\r\n      name: 'birthday',\r\n      selector: 'birthday',\r\n      sortable: true\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-primary btn-block' to='/newemployee'>New Employe</Link>\r\n      <div className=\"table-responsive\">\r\n        <DataTable columns={columnas} data={employees} title=\"Employees\" pagination fixedHeaderScrollHeight=\"600px\" />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EmployeesScreen\r\n","import { types } from '../types/types';\r\n\r\n\r\n// Obtiene los datos de la API\r\nexport const startLoadingEmployees = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const resp = await fetch('https://6edeayi7ch.execute-api.us-east-1.amazonaws.com/v1/examen/employees/jorge_calderon')\r\n      const { data: { employees } } = await resp.json();\r\n      dispatch(setEmployees(employees));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n}\r\n\r\n// Manda un empleado por post\r\nexport const postNewEmployee = (employee) => {\r\n  return async (dispatch) => {\r\n    try {\r\n\r\n      const myJSON = JSON.stringify(employee);\r\n      await fetch('https://6edeayi7ch.execute-api.us-east-1.amazonaws.com/v1/examen/employees/jorge_calderon', {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: myJSON\r\n      });\r\n      console.log('OK');\r\n\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n\r\n  }\r\n}\r\n\r\nexport const setEmployees = (employees) => ({\r\n  type: types.employeesLoad,\r\n  payload: employees\r\n});\r\n\r\nexport const addEmployeeToState = (employee) => ({\r\n  type: types.addEmployeeState,\r\n  payload: employee\r\n});\r\n\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addEmployeeToState, postNewEmployee } from '../../actions/employeesActions';\r\nimport { removeError, setError } from '../../actions/uiActions';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nconst NewEmployee = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const { msgError } = useSelector(state => state.ui);\r\n\r\n\r\n  const [formValues, handleInputChange, reset] = useForm({\r\n    name: '',\r\n    last_name: '',\r\n    birthday: ''\r\n  });\r\n\r\n  const { name, last_name, birthday } = formValues;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      dispatch(postNewEmployee(formValues));\r\n      dispatch(addEmployeeToState(formValues))\r\n      reset();\r\n    }\r\n  }\r\n\r\n\r\n  const isFormValid = () => {\r\n    if (name.trim().length === 0 || last_name.trim().length === 0 || birthday.trim().length === 0) {\r\n      dispatch(setError('All inputs are required'));\r\n      return false;\r\n    }\r\n    dispatch(removeError())\r\n    return true;\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        msgError &&\r\n        (<div className=\"alert alert-danger\" role=\"alert\">\r\n          {msgError}\r\n        </div>)\r\n      }\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputEmail1\">Name</label>\r\n          <input type=\"text\" className=\"form-control\" name='name' value={name} onChange={handleInputChange} placeholder=\"Enter a name\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputPassword1\">Last Name</label>\r\n          <input type=\"text\" className=\"form-control\" name='last_name' value={last_name} onChange={handleInputChange} placeholder=\"Last name\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"exampleInputPassword1\">Birthday</label>\r\n          <input type=\"date\" className=\"form-control\" value={birthday} onChange={handleInputChange} name='birthday' />\r\n        </div>\r\n\r\n        <button className=\"btn btn-primary btn-block\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewEmployee\r\n","import React from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startLogOut } from '../../actions/authActions';\r\n\r\n\r\nexport const Navbar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogOut = () => {\r\n    // console.log('ejje');\r\n    dispatch(startLogOut());\r\n  }\r\n\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\" >Home</Link>\r\n        <div className=\"navbar-collapse\">\r\n          <div className=\"navbar-nav\">\r\n            <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" exact to=\"/\">Employees</NavLink>\r\n            <NavLink activeClassName=\"active\" className=\"nav-item nav-link\" exact to=\"/upload\" >Upload</NavLink>\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n          <ul className=\"navbar-nav ml-auto\">\r\n            <button className=\"nav-item nav-link btn\" onClick={handleLogOut}>Logout</button>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}","import React from 'react'\r\n\r\nconst UploadScreen = () => {\r\n  return (\r\n    <div>\r\n      Upload\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadScreen\r\n","import React from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport EmployeesScreen from '../components/employees/EmployeesScreen';\r\nimport NewEmployee from '../components/employees/NewEmployee';\r\nimport { Navbar } from '../components/UI/Navbar';\r\nimport UploadScreen from '../components/upload/UploadScreen';\r\n\r\n\r\nexport const HomeRouter = () => {\r\n  return (\r\n\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"container mt-4\">\r\n        <Switch>\r\n          <Route exact path=\"/\" component={EmployeesScreen} />\r\n          <Route exact path=\"/newemployee\" component={NewEmployee} />\r\n          <Route exact path=\"/upload\" component={UploadScreen} />\r\n\r\n          <Redirect to='/' />\r\n        </Switch>\r\n      </div>\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default HomeRouter\r\n","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Redirect } from 'react-router-dom';\nimport { AuthRouter } from './AuthRouter';\n\nimport { firebase } from '../firebase/firebase-config'\nimport { useDispatch } from 'react-redux';\nimport { login, logout } from '../actions/authActions';\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\nimport HomeRouter from './HomeRouter';\n\nimport { startLoadingEmployees } from '../actions/employeesActions';\n\n\nexport const AppRouter = () => {\n\n  const dispatch = useDispatch();\n  const [checking, setChecking] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n\n    firebase.auth().onAuthStateChanged(async (user) => {\n\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName));\n        setIsLoggedIn(true);\n        dispatch(startLoadingEmployees())\n\n      } else {\n        setIsLoggedIn(false);\n      }\n      setChecking(false);\n    })\n\n\n    return () => {\n      dispatch(logout());\n      setIsLoggedIn(false);\n    }\n\n  }, [dispatch, setChecking, setIsLoggedIn]);\n\n  if (checking) {\n    return (\n      <h1>Waiit..</h1>\n    )\n  }\n\n\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n\n          <PublicRoute isLoggedIn={isLoggedIn} exact path=\"/login\" component={AuthRouter} />\n          <PrivateRoute isLoggedIn={isLoggedIn} path=\"/\" component={HomeRouter} />\n\n          <Redirect to=\"/login\" />\n\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n","// Global state of employees. \r\n\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n  employees: [],\r\n}\r\n\r\nexport const employeesReducer = (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case types.employeesLoad:\r\n      return {\r\n        employees: action.payload\r\n      }\r\n    case types.addEmployeeState:\r\n      return {\r\n        employees: [action.payload, ...state.employees]\r\n      };\r\n\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","// Global state of ui\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState, actions) => {\r\n  switch (actions.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: actions.payload\r\n      }\r\n\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null\r\n      }\r\n\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      }\r\n\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { employeesReducer } from '../reducers/employeesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  employees: employeesReducer\r\n});\r\n\r\nexport const store = createStore(reducers, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n));\r\n\r\n","// Global state of auth\r\nimport { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName\r\n      }\r\n\r\n    case types.logout:\r\n      return {}\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { AppRouter } from './routers/AppRouter';\nimport { store } from './store/store';\n\nexport const ExamenApp = () => {\n    return (\n        <Provider store={store}>\n\n            <AppRouter />\n        </Provider>\n    );\n\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ExamenApp } from './ExamenApp';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport './styles/styles.scss';\n\n\n\nReactDOM.render(\n  <ExamenApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}